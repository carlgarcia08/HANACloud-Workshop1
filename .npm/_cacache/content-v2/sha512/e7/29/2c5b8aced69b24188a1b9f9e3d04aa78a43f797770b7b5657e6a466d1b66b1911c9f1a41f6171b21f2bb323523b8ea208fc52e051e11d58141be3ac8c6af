{"maintainers":[{"name":"sap_extncrepos","email":"mob.extrepo.stores@sap.com"}],"license":"SEE LICENSE IN LICENSE file","dist-tags":{"latest":"3.1.0"},"versions":{"1.3.0":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"deprecated":false,"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.0.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"3.0.2","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^0.12.7 || ^4.4.0 || ^6.0.0 || ^8.0.0 || ^10.0.0"},"main":"index.js","name":"@sap/xsenv","repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"clean-packages && npm prune --production","test":"node build/test"},"version":"1.3.0","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-1.3.0.tgz","_id":"@sap/xsenv@1.3.0","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-Q6XJ9ibbZ2L0A7AvjD5tFhB5ltiSp3JB2m9UD+gz4cJjVlAum025G4GIv/5+Kl4SUXRfFA35OprPQlslNhNyIA==","shasum":"828d93b5c750a7e95204c3a8838bf7c3c2ca438a","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-1.3.0.tgz","fileCount":11,"unpackedSize":45434,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qg9CRA9TVsSAnZWagAAOM8P/0W9eL+x2Nww+wLi/tFt\nljREA1D3dLOUgNXZw5veY3sIxgZ6NW+mfdqcUTKU++j66AKgIUhii4p9BvTu\nN82QqglGJagcj48q35Hg5OjIdZ04MUNjP+y2d3MSpqqEoxla7Cbh72RpGm+A\nqIRSLWa7O6Kx4UITOE3WAL3FjJVJ+M2OJhnqEQFXMgjKHaq+a5jKx8JBXk49\nox72X1+m/vLcpTYjKUuZjQZ6OjLgMeKjvmvPh6N0tsbcrEbEadOnHOgCbZWj\nF0NHVSXadNHgsoFjSBh2vrVePkq+pS7+8cGaKRMd/7oukwQV98FvjFG+pwpA\nmy4zQRWoACQg1b+Jz4dkp6Zydl3i7rsmhnlk4LuoIV0ZhAoCsasrNO822HX4\nk4HRjZfUGFjDqDcpLQ63ZF/O85hmJJVEhEo4haukGcfcxsDG9XyGhKMOXGnq\nFUCjRlr9vE+273ALSvwVLVGoyvhr4GXnCf5gMrHS8BFJALKmPbOijlFJ//tT\nnoVNmOHb7HEl7/+KtnfD48knle7Xu9amtiZS3Sy2cnqsgiiAK4s1yUcWpZRY\ne68gB6P8XXZv9iS3UCSK01Fr5QDo/awXzmoBG9HVAv7Tp/0cvHyWvH5PpgRo\nHAudq1bNG3D+o2h9GuogO/T6RLLa4uY8r6qkeEwRrpq1agn86cibhEd5JI2Y\noQCs\r\n=2Km8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_1.3.0_1591912508613_0.4399354229430805"},"_hasShrinkwrap":true},"2.0.0":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"deprecated":false,"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.2.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"3.0.2","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^6.0.0 || ^8.0.0 || ^10.0.0"},"main":"index.js","name":"@sap/xsenv","repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"npm shrinkwrap && clean-packages -i && npm prune","test":"node build/test"},"version":"2.0.0","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-2.0.0.tgz","_id":"@sap/xsenv@2.0.0","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-SvHZ2IaLfvTPf1PMCVzSFUIBqHOCRC3megKiGAyPAv9nxW+X/MIKEaVvp1D/C7Mmm/sVB2wXAJZ2meNGxY28MQ==","shasum":"c01195b01adc67a8af14a822395d5ef93715c575","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-2.0.0.tgz","fileCount":11,"unpackedSize":44510,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qhECRA9TVsSAnZWagAAjlEP+QBBFxPR8IIoOWhHztgA\nH66qW8iWeBYWe0x9JY75leWHDTSfCIuNrBgG59JJQzyHziG3Ac7JQTC8T2R1\nlu7bKLYejyAdSWI7YHoMPXOOMunRIYS4xyWK2JzxvMD68uUjsGfsq/nO/F2J\nPPSVjEu7mNKEGeVJkdUhG6HuQT9tch9ROOXziUEIgvCjM6WZAlUKqrBJJIwL\n3IoupwCs1ngOADdi4hdSdtQNVb1kJhPKgwkX4kwkPx8FdNr6eZExoDnDqZsw\nTr5Ut6SAG8VTl4PlM1rt1tJW75zuH1XcyoKbkWW8nzAnmN7ky7PO8M5RdRvO\npJhiVEp5MFBiBgntF7wKer/UOD517muU/ELeqGebzgbLC6KEXvNV7/Hsej7J\n6S54+oHMXq7FJR864RBDiwhN1qNmH5Ih9RvNTLp39Ils5DtP+L26ykcvdKTA\nU4gnwZJY4jZxR5otYQK7WjTWujjnhFpdIzBYUjzimoY6bCnPJ996Ry7sqOTI\nyZPLtzPy+2nAWURj0dix9EkQzwGMPx9JzrEBBbB5x85Jr57Uv67bdiAuZiu+\niIcDNBWTHYhHJXBemev2x0jDQV1MyMYm1QcvpNmnig7lP3UFzWx1o38aYZZZ\nzqNy+At52Pyki1zJMNxYQAawzAlMIukMdrpczyCFw+Cg9SVEu26MZ1UMybYT\n0SWJ\r\n=G0Nr\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_2.0.0_1591912515647_0.6901066026171061"},"_hasShrinkwrap":true},"2.1.0":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"deprecated":false,"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.2.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"^3.0.2","mock-fs":"^4.10.1","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^6.0.0 || ^8.0.0 || ^10.0.0"},"main":"index.js","name":"@sap/xsenv","repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"npm shrinkwrap && clean-packages -i && npm prune","test":"node build/test"},"version":"2.1.0","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-2.1.0.tgz","_id":"@sap/xsenv@2.1.0","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-TOxw52ovB+fa0fyvliR6x/ZKrJFKtoHlNayPOfVQKoc85+vxvgapJn1IcuOMzvcmR12uAeCkxULzkC4mv7xCAg==","shasum":"cf0a7ce40e0782c6e98be3bebd6ac5af929d22ce","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-2.1.0.tgz","fileCount":13,"unpackedSize":55977,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qgkCRA9TVsSAnZWagAAljQP/1sSMV5zHZTgXlPcYuM3\nINq2LkE9l7L/8vK3hJ6fIuXYpP0NbfXNi8mKhq67eGzY18zF5+F/s5NUOh0H\noiV9dExVSgtgAE23DOBWwnS4873h2OpyKePbFHFHf2y3I3vPwIrcjDC2xrrB\nRHjDS2MNSfS/fLOzt4XChnRexf4/UTo4BCJz2YpNPL31SqGZsZ5AirmQ+z4p\nJT0I0srZlHq+aiJ/y32iJuBrVASJ/kuZTv0Tibaock3sjwcvQG/R9JnsvR+a\na1gWQgAP6TjH1zVxudHoHrg1x8z+fuH1aatjLbp1E3uNsmQA+UJRjrV6hQeW\nq5r8fUh/jRC6W41y/JukQYls0xe08+Po1kTA8nh0Ixyu0e3JXGEg6xe54kF+\nh5DASF4tZk7LQFdE4ihAJ2SjDFRem8qVNc9J/LM2eD3VcirHtCaX/9Blit4g\nhj+lLFO3DSFWyb+fYtG1meKGauK8SETNi1dVCCI5rp9+xCFI8jB21eV+StaY\ni1Qk2w0ThO8whUcFA6HsVvVLsM/qscmhkuVZp8lz068CxK71P7H4u8d2Aa0y\nzMdK8tP9EzllGUCGSVxFPGPFhb7wuL7bDgsZn9XorKN7JX5vDfsx5C/4BjQW\n3fAuW1xUrPOrmr8uUOfA8hrN7lx/VIftIZw36OZvis7/H0/0ZjBjOWRyuiSC\nMnoi\r\n=+fwW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_2.1.0_1591912483523_0.20510775003906656"},"_hasShrinkwrap":true},"3.0.0":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"deprecated":false,"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.2.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"^3.0.2","mock-fs":"^4.10.1","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^8.0.0 || ^10.0.0 || ^12.0.0"},"main":"index.js","name":"@sap/xsenv","repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"npm shrinkwrap && clean-packages -i && npm prune","test":"node build/test"},"version":"3.0.0","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-3.0.0.tgz","_id":"@sap/xsenv@3.0.0","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-P4WssqUpwMu8KVBsUfd9Uhzz6NyHX34Otilh5PBz2UlgF1SRGWQHsdAjc/erILf+Kk0fTn5rtbUjC8i8778BPQ==","shasum":"a2862b3e40cbea9dfb71205aa60e8cc7a08f51ec","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-3.0.0.tgz","fileCount":14,"unpackedSize":58757,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qgqCRA9TVsSAnZWagAA1ycP/0IiTZGNVRiP466/YH3r\n6jv05BxbFinHi1txumj4R2PVNx+fxRhxp8t6S9CjRu/kPpIRI553lQoinaA5\nqFZETThbZmM/NN6atw3LmNG7j7SrVovDoq9V0zjT95iHPmNfD7pgIg7mcbOo\nZjT4ytOvy5XknShhF6nIAxzSlOzKZeXdqtcKDYahRUAUPT5ODyTR5Ycr948h\nRxY/Qg51FtxOx0KgHJl3NPlfEbo7PwerGjXi1QJorrzob+qSTJL6sFLhIt05\nrLZUpFKkKkNX/1QQuSrN2CJ6PsW6d0p1qJlrMBENMAcT1h9mn8O2C2pfGmtV\nksw/PBD3wwR2GbaMIaRBe1hr9OpfKbZwtmWKgRUMt0qBesKOXx1qwcKdbTBY\n3ejNhXBTr3RYwoYlAe0myYQUYN4ty2aFfzFYTE9+Q2b4zAeS5+BbEooYQpqy\nDIjN13E813DknpRU5hpA1s7n+dAaiKgXS61kdOXfwrkp5Y0fVA6muJm6Ozon\n3414FUaontR/fo+xMSH9VI7hqNP4i2dIwRfW++xipgl/tX+jsQvCS08uJsZ+\n59HIKuLzaYuaZauSJ/5FIawbUzqk9LYsy7MgRjBhsmuW0kgEpU2ScXaOee1J\nJrHjOJme4zEuFVoeQiDE5R0LM1MHthmpLcHF1A+JYEu3gbWdgUJBajfLrO52\nzXE/\r\n=YMrT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_3.0.0_1591912489849_0.30200285543013505"},"_hasShrinkwrap":true},"1.2.6":{"dependencies":{"debug":"2.2.0","verror":"1.6.0"},"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.0.0","istanbul":"0.4.4","lodash":"4.13.1","mocha":"3.0.2","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^0.12.7 || ^4.4.0 || ^6.0.0"},"main":"index.js","maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"name":"@sap/xsenv","optionalDependencies":{},"repository":{},"scripts":{"lint":"eslint -c node_modules/node-style/.eslintrc -f stylish lib/","prepareRelease":"clean-packages && npm prune --production","test":"make test"},"version":"1.2.6","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-1.2.6.tgz","_id":"@sap/xsenv@1.2.6","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-AUHNkjDJzy/VT3Jnrr5W+Ba9C7C/ZMG+dMxq62fXLrUdFCU0Hfao2hbpwWVEHT/QyPfXuIqHE9C30CL7ytkZKQ==","shasum":"55f7a1655d106453c711fb51ae4675063c38b9aa","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-1.2.6.tgz","fileCount":9,"unpackedSize":57781,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qhrCRA9TVsSAnZWagAANLYP/3+BmctuqbRa9bmnp7fY\n23M9soV56RDOtUvUDrjdG2MPuuPM64spmMwIoOjY50UDHqD5fSYeW0Mybgfi\nHpeMCIKs2LMCdZaAwQokDHQEd7hegxUrhDTNzwc1mkAGv/LJNdHebXx+m3cB\nvtM70V/crwyvTcf8PJmdrfiEeSsQ550l+S77KifjcBaekMsDZqAQUdZ2ecCr\nMgIac4GvMX70BIrCSs1sopdexMTADKw/swa1/PX4KaBaasjFJdNEm4TJSvqT\nY8x6Zd4eV4HHb8xTT6eVCbh5rQlqILP4j9OPVOtUtu+E3X/a096SZmhTKW/2\nmu+GTIiRmsH5Zhqc1+3LSYwSuV2/Qt5PGZ7pzDOT0/vm89nyFH2VijR5Kg8o\nLkrtcebUyNc2Kes8KR/5k+KwbdL3ptSLqYqULPp2B2F80ptXF/g8Aeu3CsX0\nJA4qMiRxOqYW6FOaAXhiBKlrsM82k5dxY7e4IyflI85MIdZCteT9UKGgkabt\nlJ3dDePMV42UDkzD6qycnlueSV49MHZdUTLctXZWs/FCKXsWyeJROO2/Sn82\nQxyEKdqef9G/MPaaB/aS54ukctYCZZwlHAHG39fAWFl/NngJwYab8Y0x9J52\nnw95+NAjjXJTDseOnjRNDpcIXNIFO77cz9sj+JDFo+1PdamDtmPBoPBP0bC7\nN/xH\r\n=wHcf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_1.2.6_1591912555220_0.5831153827522286"},"_hasShrinkwrap":false},"1.2.7":{"dependencies":{"debug":"2.6.7","verror":"1.10.0"},"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.0.0","istanbul":"0.4.4","lodash":"4.17.4","mocha":"3.0.2","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^0.12.7 || ^4.4.0 || ^6.0.0"},"main":"index.js","maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"name":"@sap/xsenv","optionalDependencies":{},"repository":{},"scripts":{"lint":"eslint -c node_modules/node-style/.eslintrc -f stylish lib/","prepareRelease":"clean-packages && npm prune --production","test":"make test"},"version":"1.2.7","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-1.2.7.tgz","_id":"@sap/xsenv@1.2.7","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-V1Dgwkae9sR3MFgj2cV3Kq2+JYE95guHzl5LhXWV/W1LwrqYQMnCqinOKmsjuYcnwmSrUXhyJ+8EljQBfXZIfg==","shasum":"0e6900382fc7e118710945dd117465c8437a8be3","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-1.2.7.tgz","fileCount":9,"unpackedSize":57728,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qhxCRA9TVsSAnZWagAAnGYQAKC6kXBG5UoFthFTkimL\nYc6KO8qkCUIhSBpsEwWrcY3m3RDttMDOHfoUHikXyRUoK3nuhRGJlv8Zp9Fu\n6KbZW60QRUOAnnlAy1elhQKrmZ611iuEfQA/ySKgAKJeh1L/9Y59xC9tLYoH\nYAWz5SYoLLZNEAytvOWDbHfD+4X4fOszhOV+ltduQUEa2V79in0fsG0HLSLa\n9Z42SUtnU4+v7fEBy/kub0QaJRZBaL3FjakgA442DhgrFVHiIFrC0c7LxCmb\nysndx2j9yD1qgxMPaMtIn60lVkxaM7HknalisTIhZvyCAgxiqoGSkYYFhdlz\nU3HrKLlWTEPEU/e3vStirkZmJ2q4jFDB94y9a2iakCZUROeMuePYF47Ox+tS\ncSLeeekB80ldxvQlL4QDyihmfKkHQNdVVndfzZMRxXetKrTwzCxgB05Ul464\nIHCcLb/03uukEyyqnhQ2Y9PS0+w+ufhU25Aq5ZV1iJyIDJXCCkafgClNE055\n0XsP7e03KDcOF6Wesv45qjUoMpuLnSWk4p8ZuNqewNw9f0vb0WpM4j5+7yzY\nrpIJ615CoSE4C+GrQXREVIBYY2abW2XpSgrsr5vjDzB0F6tKwWIns6iUbc9Q\nnO/H5vtOhoDt3QShB3Vd8Tc+syD4FLvO4swTNMYo61jpQC0W+DaGo+v48x7O\nZR7k\r\n=lapq\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_1.2.7_1591912561342_0.31703369508140167"},"_hasShrinkwrap":false},"1.2.8":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.0.0","istanbul":"0.4.5","lodash":"4.17.4","mocha":"3.0.2","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^0.12.7 || ^4.4.0 || ^6.0.0 || ^8.0.0"},"main":"index.js","maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"name":"@sap/xsenv","optionalDependencies":{},"repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"clean-packages && npm prune --production","test":"node build/test"},"version":"1.2.8","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-1.2.8.tgz","_id":"@sap/xsenv@1.2.8","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-PN3IUiuzv44RJIL4M1dSEvxX+UDRWGaVkFT1t779RCWhRPg2lma40UTjxaJfcCsU+ltnfwthGpdomuF86FNAXQ==","shasum":"9fc16175601374c91e25bed004d354220ddbf1db","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-1.2.8.tgz","fileCount":10,"unpackedSize":58076,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qgwCRA9TVsSAnZWagAAo8oP/1flfsaSuzTUQyq5ZwxZ\nWudbT0X3Q8kzneV+CbAG3ONA7ic6bIlaxsz+x4E7nQkbUaQAYyszlEtxlsMj\nSWfDqg/xZpAMW1Yrs+I3D06mRJG/bRUlWZU4Kt87O8AJkYmwI3Qo7SSQiKPz\ngiFGSli8YxzEhREMSwpGh8CS+41oA7nG63azbAvT5rtXN+A57zCr+yNoqtOF\nqEK3T3wzebCoBHdIl+W9E2UwRw7hUwVIeSTvnYzPWzdkUAfpO+1AtECkLNpw\nuL22kuG8bmMk/Jp3cHAevH+cPz+w1qN3dcs3K0rYA9x8FVU8dMAkY7RWK8f5\nkY6UZhJjYKW2SY8uMQBbdXrYPd0xdTmF4kPkaNYGngbCH4JCneiY43qdbwaW\nho3xyOPToKEmYfNhufoERW1vy0Slt3ZyzCgmu+jHDPwHLRv1IbCoS2PCH+9r\nEw1lGJSAfvcGeXeVlRqA2KV69AHiJAjVgdoWHd81mZsh1AH6vS+/6NS08qpL\nLTHDtQHySb4Cvt9V/cS5XIHR95qGE+BWwW9NAR5+f9piTgjdNeQrHIET39h6\njlzL2Ljkzm93eWRbQ0n6PyTJf9m92tbK18/oObtzy9OpwgDx3OD0y6ytdlP8\nGiUfrvytjvokNfPO99yQbrjdVj79CF+8qFPusinztD9ttahJMbJPsYJopzC7\nrMoX\r\n=CCW5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_1.2.8_1591912496055_0.8741455091572659"},"_hasShrinkwrap":false},"1.2.9":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.0.0","istanbul":"0.4.5","lodash":"4.17.4","mocha":"3.0.2","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^0.12.7 || ^4.4.0 || ^6.0.0 || ^8.0.0"},"main":"index.js","maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"name":"@sap/xsenv","optionalDependencies":{},"repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"clean-packages && npm prune --production","test":"node build/test"},"version":"1.2.9","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-1.2.9.tgz","_id":"@sap/xsenv@1.2.9","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-aqjYct/f48rYj44j1Y43JUXz4ZQ7yLoCsYECeY6yK7PN4nlY1/5Oa/f4mG4Bs83A1sAymQ9Oj65ZC+Y3t54xvA==","shasum":"20c7e532e21a7e2918b247b48a1d0f428f33ae94","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-1.2.9.tgz","fileCount":11,"unpackedSize":59054,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qg3CRA9TVsSAnZWagAAYJsP/1ygeacs4CpN6JItSYIX\n+/nK2Gov41iqJCHblT4gKrwSI23hd4EkjAcco5NYPbXunRfTAf3eEedtJ20D\no/M7BZ35HChhDEUpGR/pZfzKpzjZUH+V5VXp5m+mvXeZ1Vp7FlxQ3i4yweHg\nEXHAJ9fAYVZVpDGtaVIPcHmWSXI79qAAW6joaUZ83TXSsFEYc8F1DKCnNdwV\ndJRyFWlctQivm6ZEXkuGCi+wahR+bHPyqrh5/CphCFyRSIXgYeiTu8topGMO\ngpqLlzEpNngEXCPLEsa0cqdJKTaGySV4vBjACjlf2bTkWbnbi/r26Ambq3YX\nspuLUMfpOccbokBlgwR+8Zocqx0R31/L+KlBpl60DTEtqNNsNKa7Q4cLaSOU\nFnGihA9iWSygxGhKhwRrMZKPDPFJpit62xZZ8BMDnseFhUNdqgiEZdDcx3zp\nF/xRGTVlNGum+dJ7roOQ+5KcqFyfjgh+OGyVdOw+HcKQPh7CahjZNG3tErbn\nczgaoyS9HTVTzodZIzToZVov5VPvVo+t6tSub2jgXXPd0qPTE41M/yk1tTMh\nabooBageyzQaiHJtegobErPiAXZb3BxmVZNpd8a64efL9mfg96RsxyXo4plQ\nbQoSJ9sC1WArk69OQbSVbSFJH/L7D/vHwNXSDPryI9Y6FGcp5CvUEWJtVgjp\nALxH\r\n=IGgg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_1.2.9_1591912502359_0.9281989545063463"},"_hasShrinkwrap":true},"3.1.0":{"name":"@sap/xsenv","version":"3.1.0","description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","repository":{},"license":"SEE LICENSE IN LICENSE file","main":"index.js","engines":{"node":"^8.0.0 || ^10.0.0 || ^12.0.0 || ^14.0.0"},"scripts":{"test":"node build/test","lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"npm shrinkwrap && clean-packages -i && npm prune"},"devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.2.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"^3.0.2","mock-fs":"^4.10.1","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"_resolved":"","_integrity":"","_from":"file:xsenv-3.1.0.tgz","_id":"@sap/xsenv@3.1.0","_nodeVersion":"11.11.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-Z+fwO13tcad+eoe8iTrbR471OacU754puabhRn8OI1MU2pPebDQu8rcHN7sR9JQinh4dSs953WkbDneOmvCWuA==","shasum":"86cf4a5229c7f3d3b4425aa1fab674cf8505051e","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-3.1.0.tgz","fileCount":13,"unpackedSize":47979,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfn+vACRA9TVsSAnZWagAAj58P/RVCNnk3jK5W+pR0llWC\nLC3PrN1v9bV4kY/1xYDorHykcq/NF6hE84Izn+j0lkR+Wll9HzzRkIjIXM+e\n+v1MEQDJNP274/IGKy59PqP9FE8MRG9GvBf7SkZmIL3iGrHilhwRgLdwcR8H\nujj3CSENN9g8UDqKaj+8UfZByiIc5mRs1jSjWtYFVrhnwCFyEi6ToKStF8SH\nSuJPdkx7Sny4cjKYxET5WgqF4YEuCiMvEKve8lKh433La1RvLmILFH9+9LNd\nIhXwmI61TEW4XtWyv8hlE+zQAoHCtFBm+hPmSMWeyVgRKEEB3nWzpRY951VX\nehkv2udBifFWqhZSO33khncMzuwFAOD1zYkXD/7wfdkB5+0Nty2gZdnOn9rB\nXc3CTj9txntQdRWIDR0Gy/QuoWSdaa0u5wjmbGrN61F7SN6Iq6UrrMN8Sl6T\nDCPSkT0Gn7HEfCCZEfVey/sXVrE5q8yC3yrDijriNL7y3prEizrj38fPFpZ/\nzFMiqnrxozr+jwp/x6q42O/ZGaw5h+VIp1op00NoJmfa3mZFCDu+IGtxz20B\nSPwxosjnaI2A7A2KnMHunBZGhmS9oVmxdpACsizawDJLnSVkSs6meiKOst/e\nSJGzdjbqIFBeVW6sfwsz7yQ2D4fZ5d6vJ3kVaGbLPgKGS9MGUf1+BsOqpiOR\n6djX\r\n=fpIb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"mob.extrepo.stores@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"mob.extrepo.stores@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_3.1.0_1604316095786_0.9973134117917151"},"_hasShrinkwrap":true},"2.2.0":{"dependencies":{"debug":"3.1.0","verror":"1.10.0"},"deprecated":false,"description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","devDependencies":{"eslint":"3.2.2","filter-node-package":"^2.2.0","istanbul":"0.4.5","lodash":"4.17.11","mocha":"^3.0.2","mock-fs":"^4.10.1","node-build":"^1.1.1","node-style":"^2.0.0","should":"10.0.0"},"engines":{"node":"^6.0.0 || ^8.0.0 || ^10.0.0 || ^12.0.0"},"main":"index.js","name":"@sap/xsenv","repository":{},"scripts":{"lint":"eslint -f stylish --ignore-path .gitignore .","prepareRelease":"npm shrinkwrap && clean-packages -i && npm prune","test":"node build/test"},"version":"2.2.0","license":"SEE LICENSE IN developer-license-3.1.txt","_resolved":"","_integrity":"","_from":"file:xsenv-2.2.0.tgz","_id":"@sap/xsenv@2.2.0","_nodeVersion":"11.11.0","_npmVersion":"6.13.2","dist":{"integrity":"sha512-NtxbAZ2I957OWRVdlT16C3qan1TZ9Cfs9ephEDH03gPwbTm8nRtd1uZ8tqOMj/p1CVt0IAoUnkt985btYhhzkg==","shasum":"37ff82f403ff4b756ae8c85add8288c81ff51c6a","tarball":"http://nginx-redirector.repo-cache.svc.cluster.local/repository/appstudio-npm-group/@sap/xsenv/-/xsenv-2.2.0.tgz","fileCount":13,"unpackedSize":56045,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4qhLCRA9TVsSAnZWagAAmaYP/RJANIB9gmZlJNdMxDuB\nfMKU6oMuq9kuO6lY6u2+aaOsu551m+DLbR4aQ4nt26WsmTZIIqPLI+Jf3miP\nis3CwvBnnrMN/lOp48IauWEHMhKB06ulhc8JyDdypvS0/RbFoNdB3XCJoNKU\nEg4yNECbjQPiRyl1G0c9I+mQDevakB60qIkq9qeFVRZySG1t5a4ybqyVizS2\nXdYBJCAlrYkv2p962VixzcnQeOQxdhyXsfz+EXjQk89t2SYknzy1rSC3ZBr7\nahZLsE8f4pQZfhqL1ghen7kaJcKHgoAFCLpoQfsnHBIE4R2Zy/3Z/qnC1bh3\nwTnBvAdx86kqtbY7RPmSqnevtvzSoYllH/i7/Kp3UBIZSv7ivj6s+Lm39qUk\nidYHNXkDquBqxSrTQKCVMYL7cpqARKpblkEpQ5sTsPBGVmpxpSIZb4QvRyTb\npwGc4O8e6T6P5sIpqNa80lrFkwXazNJ2hAHQFzjUUQ89ZDbx7P8hyAVGdU20\nucx0TQb7onItTxPknOmewERXE4MXDgpH7ylDxA7I9W02EhaliKu/DrR1Qoif\n/MLU6cZt/wF4+7GMeMvvoHIRN/IXBPSrFYWkdPeBw0mw9xhItRsT3KpXcjr2\n48KsFF3BUPDDlDXTQphtuTbLZ2OtexE0jEqXxcEPuzqZj92Etgxv+8D6jYlX\nfcT0\r\n=hdij\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sap_extncrepos","email":"extncrepos@sap.com"},{"name":"sapnaas","email":"Holger.Brox@sap.com"},{"name":"sapnaasuser","email":"extncrepos@sap.com"}],"_npmUser":{"name":"sap_extncrepos","email":"extncrepos@sap.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/xsenv_2.2.0_1591912522902_0.8763210487474848"},"_hasShrinkwrap":true}},"name":"@sap/xsenv","description":"Utility for easy setup and access of SAP HANA XS Advanced environment variables","time":{"1.3.0":"2020-06-11T21:55:08.770Z","2.0.0":"2020-06-11T21:55:15.769Z","2.1.0":"2020-06-11T21:54:43.643Z","3.0.0":"2020-06-11T21:54:50.244Z","1.2.6":"2020-06-11T21:55:55.328Z","created":"2020-06-11T21:54:43.280Z","1.2.7":"2020-06-11T21:56:01.437Z","1.2.8":"2020-06-11T21:54:56.183Z","1.2.9":"2020-06-11T21:55:02.509Z","modified":"2021-06-06T16:13:54.792Z","3.1.0":"2020-11-02T11:21:35.958Z","2.2.0":"2020-06-11T21:55:23.079Z"},"readme":"# @sap/xsenv\n\nUtility for easily reading application configurations for bound services and certificates in the SAP Cloud Platform Cloud Foundry environment, SAP XS advanced model and Kubernetes (K8S).\n\n\n## Install\n\n```sh\nnpm install --save @sap/xsenv\n```\n\n## Usage\n\n```js\nvar xsenv = require('@sap/xsenv');\n\n// Read the configuration for all bound service instances\nvar services = xsenv.readServices();\nconsole.log(services.serviceInstance); // prints { credentials: { user: ..., pass:... }, name: 'serviceInstance', tags: [...], label: ...\n\n// Read the credentials for all bound service instances matching a given service query\nvar services = xsenv.filterServices({ label: 'hana' });\nconsole.log(services); // prints [ { credentials: { ... } }, { credentials: { ... } } ]\n\n// Read only the credentials portion of the configuration for a service instance matching a given service query\nvar svc = xsenv.serviceCredentials({ tag: 'hana' });\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', password: '...', ... }\n\n// Read configuration for a service instance matching a given service query\nvar services = xsenv.getServices({ hana: { name: 'hanaInstance' }}); // returns { hana: { host: '...', port: '...', user: '...', password: '...', ... } }\nvar hanaInstanceCredentials = services.hana;\n\n```\nFor specifics in the usage in different environments, read below.\n\n## Usage in Cloud Foundry and SAP XS Advanced\n\nCloud Foundry and SAP XS advanced both provide application configurations via environment variables.\nThe properties of the bound services are in [VCAP_SERVICES](http://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES) environment variable in both cases.\n\n### Service Lookup\n\nNormally in Cloud Foundry you bind a service instance to your application with a command like this one:\n```sh\ncf bind-service my-app aservice\n```\n\nHere is how you can get this service configuration in your Node.js application if you don't know the instance name in advance:\n```js\nvar xsenv = require('@sap/xsenv');\n\nvar services = xsenv.readServices();\nvar svc = services[process.env.SERVICE_NAME];\n```\n\nYou can look up services based on their metadata:\n```js\nvar svc = xsenv.serviceCredentials({ tag: 'hdb' });\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', password: '...', ... }\n```\nThis example finds a service binding with `hdb` in the tags.\nSee [Service Query](#service-query) below for description of the supported query values.\n\nYou can also look up multiple services in a single call:\n```js\nvar xsenv = require('@sap/xsenv');\n\nvar services = xsenv.getServices({\n  hana: { tag: 'hdb' },\n  scheduler: { label: 'jobs' }\n});\n\nvar hanaCredentials = services.hana;\nvar schedulerCredentials = services.scheduler;\n```\nThis example finds two services - one with tag `hdb` and the other with label `jobs`.\n`getServices` function provides additional convenience that default service configuration can be provided in a JSON file.\n\nTo test the above example locally, create a file called `default-services.json` in the working directory of your application.\nThis file should contain something like this:\n```json\n{\n  \"hana\": {\n    \"host\": \"localhost\",\n    \"port\": \"30015\",\n    \"user\": \"SYSTEM\",\n    \"password\": \"secret\"\n  },\n  \"scheduler\": {\n    \"host\": \"localhost\",\n    \"port\": \"4242\",\n    \"user\": \"my_user\",\n    \"password\": \"secret\"\n  }\n}\n```\n**Note:** The result property names (`hana` and `scheduler`) are the same as those in the query object and also those in `default-services.json`.\n\n[Local environment setup](#local-environment-setup) describes an alternative approach to provide service configurations for local testing.\n\n### User-Provided Service Instances\n\nWhile this package can look up any kind of bound service instances, you should be aware that [User-Provided Service Instances](https://docs.cloudfoundry.org/devguide/services/user-provided.html) have less properties than managed service instances. Here is an example:\n```json\n  \"VCAP_SERVICES\": {\n    \"user-provided\": [\n      {\n        \"name\": \"pubsub\",\n        \"label\": \"user-provided\",\n        \"tags\": [],\n        \"credentials\": {\n          \"binary\": \"pubsub.rb\",\n          \"host\": \"pubsub01.example.com\",\n          \"password\": \"p@29w0rd\",\n          \"port\": \"1234\",\n          \"username\": \"pubsubuser\"\n        },\n        \"syslog_drain_url\": \"\"\n\t  }\n    ]\n  }\n```\nAs you can see the only usable property is the `name`. In particular, there are no tags for a user-provided services.\n\n\n## Usage in Kubernetes\n\nKubernetes offers several ways of handling application configurations for bound services and certificates. @sap/xsenv expects that such configurations are handled as Kubernetes Secrets and mounted as files to the pod at a specific path. This path can be provided by the application developer, but the default is `/etc/secrets/sapcp`. From there, @sap/xsenv assumes that the directory structure is the following `/etc/secrets/sapcp/<service-name>/<instance-name>`. Here `<service-name>` and `<instance-name>` are both directories and the latter contains the credentials/configurations for the service instance as files, where the file name is the name of the configuration/credential and the content is respectively the value.\n\nFor example, the following folder structure:\n```sh\n\n/etc/\n    /secrets/\n            /sapcp/\n                 /hana/\n                 |    /hanaInst1/\n                 |    |          /user1\n                 |    |          /pass1\n                 |    /hanaInst2/\n                 |               /user2\n                 |               /pass2\n                 /xsuaa/\n                       /xsuaaInst/\n                                  /user\n                                  /pass\n```\nresembles two instances of service `hana` - `hanaInst1` and `hanaInst2` each with their own credentials/configurations and one instance of service `xsuaa` called `xsuaaInst` with its credentials.\n\nIn Kubernetes you can create and bind to a service instance in the following way using the Service Catalog:\n\n```sh\nsvcat provision xsuaaInst --class xsuaa --plan application\nsvcat bind xsuaaInst --name xsuaaBind\n```\nUpon creation of the binding, the Service Catalog will create a Kubernetes secret (by default with the same name as the binding) containing credentials, configurations and certificates. This secret can then be mounted to the pod as a volume.\n\nThe following *deployment.yml* file would generate the file structure above, assuming we have bindings `hanaBind1`, `hanaBind2` and `xsuaaBind` for service instances `hanaInst1`, `hanaInst2` and `xsuaaInst` created with Service Catalog:\n```sh\n...\n     containers:\n      - name: app\n        image: app-image:1.0.0\n        ports:\n          - appPort: 8080\n        volumeMounts:\n        - name: hana-volume-1\n          mountPath: \"/etc/secrets/sapcp/hana/hanaInst1\"\n          readOnly: true\n        - name: hana-volume-2\n          mountPath: \"/etc/secrets/sapcp/hana/hanaInst2\"\n          readOnly: true\n        - name: xsuaa-volume\n          mountPath: \"/etc/secrets/sapcp/xsuaa/xsuaaInst\"\n          readOnly: true\n      volumes:\n      - name: hana-volume-1\n        secret:\n          secretName: hanaBind1\n      - name: hana-volume-2\n        secret:\n          secretName: hanaBind2\n      - name: xsuaa-volume\n        secret:\n          secretName: xsuaaBind\n\n```\n\nOf course, you can also create Kubernetes secrets directly with `kubectl` and  mount them to the pod. As long as the mount path follows the `<root-path>/<service-name>/<instance-name>` pattern, @sap/xsenv will be able to read and filter the bound services configurations.\n\n**Note**: The library attempts to parse property values which represent valid JSON objects.\nProperty values representing arrays are not being parsed.\n\nThe following service credentials:\n\n```\n/etc/\n    /secrets/\n            /sapcp/\n                 /some-service/\n                       /some-instance/\n                                  /url   - containing https://some-service\n                                  /uaa   - containing { \"url\": \"https://uaa\", \"clientid\": \"client\", \"clientsecret\": \"secret\" }\n                                  /other - containing [1, \"two\"]\n```\n\nWill be available to the application as:\n\n```js\n{\n  url: 'https://some-service',\n  uaa: {\n    url: 'https://uaa',\n    clientid: 'client',\n    clientsecret: 'secret'\n  },\n  other: '[1, \"two\"]'\n}\n```\n\n### Service Lookup\n\nService look up in the Kubernetes environment looks the same way as it does in the Cloud Foundry one.\n\nLooking at the above example of bound services here is how you can get the service configuration of `hanaInst1` in your node application:\n\n```js\nvar xsenv = require('@sap/xsenv');\n\nvar services = xsenv.readServices();\nconsole.log(services.hanaInst1.credentials); // prints { user1: '...', pass1: '...', ... }\n```\n\nHere is how to lookup the service based on its metadata in Kubernetes:\n```js\nvar svc = xsenv.serviceCredentials({ label: 'hana' });\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', passwrod: '...', ... }\n```\nThis example finds a service binding with `hana` as a label. Note that for Kubernetes lookup based on metadata is limited. See [Service Query](#service-query) below for description of the supported query values in Cloud Foundry and Kubernetes.\n\n\nIf you have mounted your secrets to a different path, you can pass it to @sap/xsenv like so:\n\n```js\nvar xsenv = require('@sap/xsenv');\n\nvar services = xsenv.getServices('/some/user/path', {\n  hana: { name: 'hanaInst1' },\n  xsuaa: { label: 'xsuaa' }\n});\n\nvar hanaCredentials = services.hana;\nvar schedulerCredentials = services.xsuaa;\n```\n\n## Local Usage\n\nFor local testing you can provide configurations by yourself. This package allows you to provide default configurations in a separate configuration file.\n* This reduces clutter by removing configuration data from the app code.\n* You don't have to set env vars manually each time you start your app.\n* Different developers can use their own configurations for their local tests without changing files under source control. Just add this configuration file to `.gitignore` and `.cfignore`.\n\nYou can provide default configurations on two levels:\n* For bound services via `getServices()` and `default-services.json`\n* For any environment variable via `loadEnv()` and `default-env.json`\n\n## Service Query\n\nBoth `getServices` and `filterServices` use the same service query values. Due to specifics of the environment the queries in Cloud Foundry can be richer - see property table below.\n\nQuery value | Description\n------------|------------\n{string}    | Matches the service with the same service instance name (`name` property). Same as `{ name: '<string>' }`.\n{object}    | All properties of the given object should match corresponding service instance properties as they appear in VCAP_SERVICES or the Kubernetes secret. See below what is supported on each platform.\n{function}  | A function that takes a service object as argument and returns `true`, only if it is considered a match.\n\nIf an object is given as a query value, it may have the following properties:\n\nProperty | CF  | K8S | Description\n---------|-----|-----|------------\n`name`   | yes | yes |Service instance name - the name you use to bind the service\n`label`  | yes | yes |Service name - the name shown by `cf marketplace`\n`tag`    | yes | no  |Should match any of the service tags\n`plan`   | yes | no  |Service instance plan - the plan you use in `cf create-service`\n\nIf multiple properties are given, _all_ of them must match.\n\n**Note:** Do not confuse the instance name (`name` property) with the service name (`label` property).\nSince you can have multiple instances of the same service bound to your app,\ninstance name is unique while service name is not.\n\nHere are some examples.\n\nFind a service instance by name:\n```js\nxsenv.serviceCredentials('hana');\n```\n\nLook up a service by tag:\n```js\nxsenv.serviceCredentials({ tag: 'relational' });\n```\n\nMatch several properties:\n```js\nxsenv.serviceCredentials({ label: 'hana', plan: 'shared' });\n```\n\nPass a custom filter function:\n```js\nxsenv.serviceCredentials(function(service) {\n  return /shared/.test(service.plan) && /hdi/.test(service.label);\n});\n```\nNotice that the filter function is called with the full service object as it appears in VCAP_SERVICES, but `serviceCredentials` returns only the `credentials` property of the matching service. The behaviour is the same in Kubernetes - the function will return only the contents of the `credentials` portion of the mounted secret.\n\n## API\n\n### getServices([path], query, [servicesFile])\n\nLooks up bound service instances matching the given query.\nIf a service is not found - returns default service configuration loaded from a JSON file. The order of lookup is VCAP_SERVICES -> mounted secrets path in K8S -> default service configuration.\n\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\". For example, by default the credentials for an instance \"inst-name\" of service \"service-name\" would be located under \"/etc/secrets/sapcp/service-name/inst-name\".\n* `query` - An object describing requested services. Each property value is a filter as described in [Service Query](#service-query)\n* `servicesFile` - (optional) path to JSON file to load default service configuration (default is default-services.json).\nIf `null`, do not load default service configuration.\n* _returns_ - An object with the same properties as in query argument where the value of each property is the respective service credentials object\n* _throws_ - An error, if for some of the requested services no or multiple instances are found\n\n### serviceCredentials([path], filter)\n\nLooks up a bound service instance matching the given filter works for both the Kubernetes and Cloud Foundry environments.\n\n**Note:** This function does not load default service configuration from default-services.json.\n\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\n* `filter` - Service lookup criteria as described in [Service Query](#service-query)\n* _returns_ - Credentials object of found service\n* _throws_ - An error in case no or multiple matching services are found\n\n### filterServices([path], filter)\n\nReturns all bound services that match the given criteria. Works in Cloud Foundry and Kubernetes.\n\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\n* `filter` - Service lookup criteria as described in [Service Query](#service-query)\n* _returns_ - An array of credentials objects of matching services. Empty array, if no matches found.\n\n### readServices([path])\n\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\n* _returns_ Returns an object where each service instance is mapped to its name. Works in Kubernetes and Cloud Foundry.\n\nFor example, given this VCAP_SERVICES:\n```\n  {\n    \"hana\" : [ {\n      \"credentials\" : {\n        ...\n      },\n      \"label\" : \"hana\",\n      \"name\" : \"hana1\",\n      \"plan\" : \"shared\",\n      \"tags\" : [ \"hana\", \"relational\" ]\n    },\n    {\n      \"credentials\" : {\n        ...\n      },\n      \"label\" : \"hana\",\n      \"name\" : \"hana2\",\n      \"plan\" : \"shared\",\n      \"tags\" : [ \"hana\", \"relational\", \"SP09\" ]\n    } ]\n  }\n```\n`readServices` would return:\n```\n{\n  hana1: {\n    \"credentials\" : {\n      ...\n    },\n    \"label\" : \"hana\",\n    \"name\" : \"hana1\",\n    \"plan\" : \"shared\",\n    \"tags\" : [ \"hana\", \"relational\" ]\n  },\n  hana2: {\n    \"credentials\" : {\n      ...\n    },\n    \"label\" : \"hana\",\n    \"name\" : \"hana2\",\n    \"plan\" : \"shared\",\n    \"tags\" : [ \"hana\", \"relational\", \"SP09\" ]\n  }\n}\n```\n\n\n### cfServiceCredentials(filter)\n\nSame as [serviceCredentials(filter)](#servicecredentialspath-filter) but works only in Cloud Foundry. It is recommended to use the generic function.\n\n### filterCFServices(filter)\n\nSame as [filterServices(filter)](#filterservicespath-filter) but works only in Cloud Foundry. It is recommended to use the generic function.\n\n### readCFServices()\n\nSame as [readServices()](#readservicespath) but works only in Cloud Foundry. It is recommended to use the generic function.\n\n## Local environment setup\n\nTo test your application locally you often need to setup its environment so that resembles the environment in Cloud Foundry or Kubernetes.\nYou can do this easily by defining the necessary environment variables in a JSON file.\n\nFor example you can create file _default-env.json_ with the following content in the working directory of the application :\n```json\n{\n  \"PORT\": 3000,\n  \"VCAP_SERVICES\": {\n    \"hana\": [\n      {\n        \"credentials\": {\n          \"host\": \"myhana\",\n          \"port\": \"30015\",\n          \"user\": \"SYSTEM\",\n          \"password\": \"secret\"\n        },\n        \"label\": \"hana\",\n        \"name\": \"hana-R90\",\n        \"tags\": [\n          \"hana\",\n          \"database\",\n          \"relational\"\n        ]\n      }\n    ],\n    \"scheduler\": [\n      {\n        \"credentials\": {\n          \"host\": \"localhost\",\n          \"port\": \"4242\",\n          \"user\": \"jobuser\",\n          \"password\": \"jobpassword\"\n        },\n        \"label\": \"scheduler\",\n        \"name\": \"jobscheduler\",\n        \"tags\": [\n          \"scheduler\"\n        ]\n      }\n    ]\n  }\n}\n```\nThen load it in your application:\n```js\nxsenv.loadEnv();\nconsole.log(process.env.PORT); // prints 3000\nconsole.log(xsenv.cfServiceCredentials('hana-R90')); // prints { host: 'myhana, port: '30015', user: 'SYSTEM', password: 'secret' }\n```\n\nThis way you don't need in your code conditional logic if it is running in Cloud Foundry or locally.\n\nYou can also use a different file name:\n```js\nxsenv.loadEnv('myenv.json');\n```\n\n### loadEnv([file])\n\nLoads the environment from a JSON file.\nThis function converts each top-level property to a string and sets it in the respective environment variable,\nunless it is already set. This function does not change existing environment variables. So the file content acts like default values for environment variables.\n\nThis function does not complain if the file does not exist.\n\n* `file` - optional name of JSON file to load, `'default-env.json'` by default. Does nothing if the file does not exist.\n\n## Loading SSL Certificates\n\nIf SSL is configured in XS advanced On-Premise Runtime, it will provide one or more\ntrusted CA certificates that applications can use to make SSL connections.\nIf present, the file paths of these certificates are listed in `XS_CACERT_PATH`\nenvironment variable separated by `path.delimiter` (`:` on LINUX and `;` on Windows).\n\n### loadCertificates([certPath])\n\nLoads the certificates listed in the given path.\nIf this argument is not provided, it uses `XS_CACERT_PATH` environment variable instead.\nIf that is not set either, the function returns `undefined`.\nThe function returns an array even if a single certificate is provided.\nThis function is synchronous.\n\n* `certPath` - optional string with certificate files to load. The file names are separated by `path.delimiter`. Default is `process.env.XS_CACERT_PATH`.\n* _returns_ - an array of loaded certificates or `undefined` if `certPath` argument is not provided\n* _throws_ - an error, if some of the files could not be loaded\n\nFor example, this code loads the trusted CA certificates so they are used for all\nsubsequent outgoing HTTPS connections:\n```js\nvar https = require('https');\nvar xsenv = require('@sap/xsenv');\n\nhttps.globalAgent.options.ca = xsenv.loadCertificates();\n```\n\nThis function can be used also to load SSL certificates for HANA like this:\n```js\nvar hdb = require('hdb');\nvar xsenv = require('@sap/xsenv');\n\nvar client = hdb.createClient({\n  host : 'hostname',\n  port : 30015,\n  ca   : xsenv.loadCertificates(),\n  ...\n});\n```\n\n## Debugging\n\nSet `DEBUG=xsenv` in the environment to enable debug traces. See [debug](https://www.npmjs.com/package/debug) package for details.\n","readmeFilename":"README.md","repository":{}}