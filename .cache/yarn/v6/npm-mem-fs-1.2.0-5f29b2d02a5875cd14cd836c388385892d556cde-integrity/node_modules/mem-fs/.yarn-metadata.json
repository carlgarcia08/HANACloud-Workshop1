{
  "manifest": {
    "name": "mem-fs",
    "version": "1.2.0",
    "description": "Simple in-memory vinyl file store",
    "scripts": {
      "test": "mocha"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/SBoudrias/mem-fs.git"
    },
    "author": {
      "name": "Simon Boudrias"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "dependencies": {
      "through2": "^3.0.0",
      "vinyl": "^2.0.1",
      "vinyl-file": "^3.0.0"
    },
    "devDependencies": {
      "mocha": "^5.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/user/.cache/yarn/v6/npm-mem-fs-1.2.0-5f29b2d02a5875cd14cd836c388385892d556cde-integrity/node_modules/mem-fs/package.json",
    "readmeFilename": "README.md",
    "readme": "mem-fs\n=============\n\nSimple in-memory vinyl file store.\n\n\nUsage\n-------------\n\n### Loading a file\n\nYou access a file using `store#get()` method. If the file is in memory, it will be used. Otherwise, we'll load the file from the file-system.\n\n```js\nvar store = require('mem-fs').create();\n\nstore.get('/test/file.txt');\n```\n\nWhen trying to load a file we cannot read from disk, an empty Vinyl file will be returned. The `contents` of this file will be set to `null`.\n\nTrying to get a directory or any invalid files will also return an empty Vinyl file pointer.\n\n### Adding/updating a file\n\nYou update file references by using `store#add()` method. This method take a `vinyl` file object as parameter.\n\n```js\nvar File = require('vinyl');\nvar store = require('mem-fs').create();\n\nvar coffeeFile = new File({\n  cwd: '/',\n  base: '/test/',\n  path: '/test/file.coffee',\n  contents: new Buffer('test = 123')\n});\n\nstore.add(coffeeFile);\n```\n\n### Iterating over the file system\n\nUsing `store#each(cb(file, index))`, you can iterate over every file stored in the file system.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mem-fs/-/mem-fs-1.2.0.tgz#5f29b2d02a5875cd14cd836c388385892d556cde",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mem-fs/-/mem-fs-1.2.0.tgz",
    "hash": "5f29b2d02a5875cd14cd836c388385892d556cde",
    "integrity": "sha512-b8g0jWKdl8pM0LqAPdK9i8ERL7nYrzmJfRhxMiWH2uYdfYnb7uXnmwVb0ZGe7xyEl4lj+nLIU3yf4zPUT+XsVQ==",
    "registry": "npm",
    "packageName": "mem-fs",
    "cacheIntegrity": "sha512-b8g0jWKdl8pM0LqAPdK9i8ERL7nYrzmJfRhxMiWH2uYdfYnb7uXnmwVb0ZGe7xyEl4lj+nLIU3yf4zPUT+XsVQ== sha1-Xymy0CpYdc0UzYNsOIOFiS1VbN4="
  },
  "registry": "npm",
  "hash": "5f29b2d02a5875cd14cd836c388385892d556cde"
}