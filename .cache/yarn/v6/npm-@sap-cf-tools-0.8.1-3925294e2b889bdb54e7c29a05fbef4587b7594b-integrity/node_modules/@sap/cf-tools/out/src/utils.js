"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureQuery = exports.dataContentAsObject = void 0;
const _ = require("lodash");
const os = require("os");
const fsextra = require("fs-extra");
const types_1 = require("./types");
function dataContentAsObject(filePath) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            return _.reduce(_.split(yield fsextra.readFile(filePath, "utf8"), os.EOL), (data, line) => {
                const parts = _.split(line, '=');
                if (_.size(parts) > 1) {
                    data[_.trim(parts[0])] = _.trim(parts[1]);
                }
                return data;
            }, {});
        }
        catch (error) {
            return {};
        }
    });
}
exports.dataContentAsObject = dataContentAsObject;
function ensureQuery(query) {
    query = query || {};
    _.defaults(query, { filters: [] });
    _.defaults(query, { 'results-per-page': types_1.CF_PAGE_SIZE });
    return query;
}
exports.ensureQuery = ensureQuery;
//# sourceMappingURL=utils.js.map