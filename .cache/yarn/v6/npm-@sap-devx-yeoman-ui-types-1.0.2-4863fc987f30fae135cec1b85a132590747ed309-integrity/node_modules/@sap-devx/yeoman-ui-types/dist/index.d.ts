export declare abstract class AppWizard {
    abstract showProgress(message?: string): void;
    abstract showWarning(message: string, type: MessageType): void;
    abstract showError(message: string, type: MessageType): void;
    abstract showInformation(message: string, type: MessageType): void;
    static create(genOptions?: any): AppWizard;
}
export declare enum Severity {
    error = 0,
    warning = 1,
    information = 2
}
export declare enum MessageType {
    prompt = 0,
    notification = 1
}
export declare class Prompts {
    private items;
    private callback;
    constructor(items?: IPrompt[]);
    splice(start: number, deleteCount: number, items: IPrompt[]): void;
    setCallback(callback: any): void;
    size(): number;
}
export interface IPrompt {
    name: string;
    description: string;
}
